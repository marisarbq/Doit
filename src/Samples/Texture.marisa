@desc
贴图的学习，如何给三角形贴材质（

@glsl.vert
#version 300 es

layout (location=0) in vec3 aPos;
in vec3 aColor;
in vec2 aTexCoord;

out vec3 outColor;
out vec2 TexCoord;

void main()
{
    gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0f);
    outColor = aColor;
    TexCoord = aTexCoord;
}


@glsl.frag
#version 300 es

#ifdef GL_ES
precision mediump float;
#endif

in vec3 outColor;
in vec2 TexCoord;

uniform sampler2D ourTexture;

out vec4 myColor;

void main()
{
    vec4 color = texture(ourTexture,TexCoord);
    myColor = color;
} 

@ts
const vertices = [
    0.0, 0.5, 0.0, 1.0, 0.0, 0.0, 0.5, 1.0,   // 右中
    0.5, -0.5, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0,   // 右下
    -0.5, -0.5, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0   // 左下
]
const texCoords = [
    0.0, 0.0,
    1.0, 0.0,
    0.5, 1.0
];

const gl = this.gl;
const program = this.program;
let VBO = gl.createBuffer();
gl.bindBuffer(gl.ARRAY_BUFFER, VBO);
let v = new Float32Array(vertices);
gl.bufferData(gl.ARRAY_BUFFER, v, gl.STATIC_DRAW);

var aPos = gl.getAttribLocation(program, 'aPos');
gl.vertexAttribPointer(aPos, 3, gl.FLOAT, false, 8 * v.BYTES_PER_ELEMENT, 0);
gl.enableVertexAttribArray(aPos);

var aColor = gl.getAttribLocation(program, 'aColor');
gl.vertexAttribPointer(aColor, 3, gl.FLOAT, false, 8 * v.BYTES_PER_ELEMENT, 3 * v.BYTES_PER_ELEMENT);
gl.enableVertexAttribArray(aColor);

var aTexCoord = gl.getAttribLocation(program, 'aTexCoord');
gl.vertexAttribPointer(aTexCoord, 2, gl.FLOAT, false, 8 * v.BYTES_PER_ELEMENT, 6 * v.BYTES_PER_ELEMENT);
gl.enableVertexAttribArray(aTexCoord);


var ourTexture = gl.getUniformLocation(program, 'ourTexture');


gl.useProgram(program);

@image
./assets/image/1.jpg

@ts

let img = this.getImage(0);
console.log(img)
let tex = gl.createTexture();
gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);
gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1); 
gl.activeTexture(gl.TEXTURE0);
gl.bindTexture(gl.TEXTURE_2D, tex);

//一系列tex处理阐述
gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);

//texture bound to texture unit 0 is not renderable. It maybe non-power-of-2 and have incompatible texture filtering.
//因为材质图默认很多图片不是所谓的标准尺寸，2^n这种 需要拉伸
gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);


gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);
gl.uniform1i(ourTexture, 0);


gl.bindBuffer(gl.ARRAY_BUFFER, VBO);
// gl.clear(gl.COLOR_BUFFER_BIT);
gl.drawArrays(gl.TRIANGLE_STRIP, 0, vertices.length / 8);